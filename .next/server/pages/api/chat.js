"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "sentiment":
/*!****************************!*\
  !*** external "sentiment" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("sentiment");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\chat.js */ \"(api)/./pages/api/chat.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNoYXQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q2NoYXQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDa0Q7QUFDbEQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLCtDQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywrQ0FBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFtaWEtdGhlcmFwaXN0LWJvdC8/N2EwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXGNoYXQuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0XCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/chat.js":
/*!***************************!*\
  !*** ./pages/api/chat.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var sentiment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sentiment */ \"sentiment\");\n/* harmony import */ var sentiment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(sentiment__WEBPACK_IMPORTED_MODULE_0__);\n\n// Rate limiting configuration\nconst RATE_LIMIT_WINDOW = 60 * 1000; // 1 minute\nconst MAX_REQUESTS_PER_WINDOW = 10; // 10 requests per minute\nconst ipRequestCounts = new Map();\n// Request validation schema\nconst validateRequest = (messages)=>{\n    if (!Array.isArray(messages)) {\n        throw new Error(\"Messages must be an array\");\n    }\n    if (messages.length === 0) {\n        throw new Error(\"Messages array cannot be empty\");\n    }\n    for (const message of messages){\n        if (!message.role || !message.content) {\n            throw new Error(\"Each message must have a role and content\");\n        }\n        if (![\n            \"user\",\n            \"assistant\",\n            \"system\"\n        ].includes(message.role)) {\n            throw new Error(\"Invalid message role\");\n        }\n        if (typeof message.content !== \"string\") {\n            throw new Error(\"Message content must be a string\");\n        }\n    }\n};\n// Logging function\nconst logRequest = (req, status, error = null)=>{\n    const timestamp = new Date().toISOString();\n    const ip = req.headers[\"x-forwarded-for\"] || req.socket.remoteAddress;\n    const logEntry = {\n        timestamp,\n        ip,\n        method: req.method,\n        path: req.url,\n        status,\n        error: error?.message || null\n    };\n    console.log(JSON.stringify(logEntry));\n};\nasync function handler(req, res) {\n    // Add CORS headers\n    res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    res.setHeader(\"Access-Control-Allow-Methods\", \"POST, OPTIONS\");\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\n    // Handle preflight requests\n    if (req.method === \"OPTIONS\") {\n        return res.status(200).end();\n    }\n    // Only allow POST requests\n    if (req.method !== \"POST\") {\n        logRequest(req, 405);\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    // Rate limiting\n    const ip = req.headers[\"x-forwarded-for\"] || req.socket.remoteAddress;\n    const now = Date.now();\n    const windowStart = now - RATE_LIMIT_WINDOW;\n    // Clean up old entries\n    for (const [storedIp, data] of ipRequestCounts.entries()){\n        if (data.timestamp < windowStart) {\n            ipRequestCounts.delete(storedIp);\n        }\n    }\n    // Check rate limit\n    const requestData = ipRequestCounts.get(ip) || {\n        count: 0,\n        timestamp: now\n    };\n    if (requestData.count >= MAX_REQUESTS_PER_WINDOW) {\n        logRequest(req, 429, new Error(\"Rate limit exceeded\"));\n        return res.status(429).json({\n            error: \"Too many requests. Please try again later.\"\n        });\n    }\n    // Update request count\n    ipRequestCounts.set(ip, {\n        count: requestData.count + 1,\n        timestamp: now\n    });\n    // Validate API key\n    if (!process.env.OPENAI_API_KEY) {\n        logRequest(req, 500, new Error(\"OpenAI API key is not configured\"));\n        return res.status(500).json({\n            error: \"OpenAI API key is not configured\"\n        });\n    }\n    try {\n        const { messages } = req.body;\n        // Validate request body\n        try {\n            validateRequest(messages);\n        } catch (validationError) {\n            logRequest(req, 400, validationError);\n            return res.status(400).json({\n                error: validationError.message\n            });\n        }\n        // Sentiment analysis for first and last user messages\n        const sentiment = new (sentiment__WEBPACK_IMPORTED_MODULE_0___default())();\n        const userMessages = messages.filter((m)=>m.role === \"user\" && typeof m.content === \"string\");\n        let startMood = null;\n        let endMood = null;\n        if (userMessages.length > 0) {\n            const firstScore = sentiment.analyze(userMessages[0].content).score;\n            const lastScore = sentiment.analyze(userMessages[userMessages.length - 1].content).score;\n            startMood = firstScore > 2 ? \"positive\" : firstScore < -2 ? \"negative\" : \"neutral\";\n            endMood = lastScore > 2 ? \"positive\" : lastScore < -2 ? \"negative\" : \"neutral\";\n        }\n        // Add timeout to the fetch request\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 30000); // 30 second timeout\n        const response = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${process.env.OPENAI_API_KEY}`\n            },\n            body: JSON.stringify({\n                model: \"gpt-4\",\n                messages: [\n                    {\n                        role: \"system\",\n                        content: `\r\nYou are Clamia, a compassionate, professional, and experienced **licensed mental health professional** (therapist). You must always act as a real therapist, never as a generic assistant or chatbot. Your role is to:\r\n\r\n- Listen actively and empathetically\r\n- Build trust and rapport\r\n- Ask open-ended, non-judgmental questions\r\n- Maintain confidentiality and respect\r\n- Guide, but never judge or rush\r\n- Reflect and validate feelings\r\n- Encourage self-exploration and growth\r\n- Always provide a safe, non-judgmental space for the user\r\n- Respond in the user's language\r\n- If the user uploads an image and you receive extracted text, treat it as if the user typed it and respond helpfully and empathetically.\r\n\r\n**Session Flow:**\r\n1. Always begin every new session by gently asking for the user's **name** first. Do not proceed until you have the name.\r\n2. Next, ask for the user's **age**. Do not proceed until you have the age.\r\n3. Then, ask for the user's **country** or where they are currently living. Do not proceed until you have this information.\r\n4. Only after these three, continue with other open-ended, therapeutic questions.\r\n\r\n**Important Rules:**\r\n- Maintain a warm, empathetic, and supportive tone.\r\n- Never skip or reorder the first three questions (name, age, country).\r\n- Do NOT recommend the user talk to another mental health professional.\r\n- Only recommend emergency help if the user is in immediate danger.\r\n- Always reflect on the user's emotions before asking follow-up questions.\r\n\r\n**Example Questions:**\r\n- Can you tell me a bit about how you've been feeling lately?\r\n- What are some of the challenges you're facing?\r\n- Is there something that has been particularly on your mind?\r\n            `\n                    },\n                    ...messages\n                ]\n            }),\n            signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        if (!response.ok) {\n            const error = await response.json();\n            throw new Error(error.error?.message || \"OpenAI API request failed\");\n        }\n        const data = await response.json();\n        if (data.choices && data.choices.length > 0) {\n            logRequest(req, 200);\n            res.status(200).json({\n                reply: data.choices[0].message,\n                startMood,\n                endMood\n            });\n        } else {\n            throw new Error(\"No response from OpenAI\");\n        }\n    } catch (error) {\n        logRequest(req, 500, error);\n        res.status(500).json({\n            error: error.message || \"An error occurred while processing your request\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU07UUFDbEI7SUFDRixFQUFFLE9BQU9TLE9BQU87UUFDZEgsV0FBV0MsS0FBSyxLQUFLRTtRQUNyQmlCLElBQUlsQixNQUFNLENBQUMsS0FBS3FCLElBQUksQ0FBQztZQUNuQnBCLE9BQU9BLE1BQU1QLE9BQU8sSUFBSTtRQUMxQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFtaWEtdGhlcmFwaXN0LWJvdC8uL3BhZ2VzL2FwaS9jaGF0LmpzPzFjNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlbnRpbWVudCBmcm9tICdzZW50aW1lbnQnO1xyXG5cclxuLy8gUmF0ZSBsaW1pdGluZyBjb25maWd1cmF0aW9uXHJcbmNvbnN0IFJBVEVfTElNSVRfV0lORE9XID0gNjAgKiAxMDAwOyAvLyAxIG1pbnV0ZVxyXG5jb25zdCBNQVhfUkVRVUVTVFNfUEVSX1dJTkRPVyA9IDEwOyAvLyAxMCByZXF1ZXN0cyBwZXIgbWludXRlXHJcbmNvbnN0IGlwUmVxdWVzdENvdW50cyA9IG5ldyBNYXAoKTtcclxuXHJcbi8vIFJlcXVlc3QgdmFsaWRhdGlvbiBzY2hlbWFcclxuY29uc3QgdmFsaWRhdGVSZXF1ZXN0ID0gKG1lc3NhZ2VzKSA9PiB7XHJcbiAgaWYgKCFBcnJheS5pc0FycmF5KG1lc3NhZ2VzKSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdNZXNzYWdlcyBtdXN0IGJlIGFuIGFycmF5Jyk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChtZXNzYWdlcy5sZW5ndGggPT09IDApIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignTWVzc2FnZXMgYXJyYXkgY2Fubm90IGJlIGVtcHR5Jyk7XHJcbiAgfVxyXG5cclxuICBmb3IgKGNvbnN0IG1lc3NhZ2Ugb2YgbWVzc2FnZXMpIHtcclxuICAgIGlmICghbWVzc2FnZS5yb2xlIHx8ICFtZXNzYWdlLmNvbnRlbnQpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFYWNoIG1lc3NhZ2UgbXVzdCBoYXZlIGEgcm9sZSBhbmQgY29udGVudCcpO1xyXG4gICAgfVxyXG4gICAgaWYgKCFbJ3VzZXInLCAnYXNzaXN0YW50JywgJ3N5c3RlbSddLmluY2x1ZGVzKG1lc3NhZ2Uucm9sZSkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG1lc3NhZ2Ugcm9sZScpO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBtZXNzYWdlLmNvbnRlbnQgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignTWVzc2FnZSBjb250ZW50IG11c3QgYmUgYSBzdHJpbmcnKTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG4vLyBMb2dnaW5nIGZ1bmN0aW9uXHJcbmNvbnN0IGxvZ1JlcXVlc3QgPSAocmVxLCBzdGF0dXMsIGVycm9yID0gbnVsbCkgPT4ge1xyXG4gIGNvbnN0IHRpbWVzdGFtcCA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcclxuICBjb25zdCBpcCA9IHJlcS5oZWFkZXJzWyd4LWZvcndhcmRlZC1mb3InXSB8fCByZXEuc29ja2V0LnJlbW90ZUFkZHJlc3M7XHJcbiAgY29uc3QgbG9nRW50cnkgPSB7XHJcbiAgICB0aW1lc3RhbXAsXHJcbiAgICBpcCxcclxuICAgIG1ldGhvZDogcmVxLm1ldGhvZCxcclxuICAgIHBhdGg6IHJlcS51cmwsXHJcbiAgICBzdGF0dXMsXHJcbiAgICBlcnJvcjogZXJyb3I/Lm1lc3NhZ2UgfHwgbnVsbFxyXG4gIH07XHJcbiAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkobG9nRW50cnkpKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICAvLyBBZGQgQ09SUyBoZWFkZXJzXHJcbiAgcmVzLnNldEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTtcclxuICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1NZXRob2RzJywgJ1BPU1QsIE9QVElPTlMnKTtcclxuICByZXMuc2V0SGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ0NvbnRlbnQtVHlwZScpO1xyXG5cclxuICAvLyBIYW5kbGUgcHJlZmxpZ2h0IHJlcXVlc3RzXHJcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdPUFRJT05TJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5lbmQoKTtcclxuICB9XHJcblxyXG4gIC8vIE9ubHkgYWxsb3cgUE9TVCByZXF1ZXN0c1xyXG4gIGlmIChyZXEubWV0aG9kICE9PSAnUE9TVCcpIHtcclxuICAgIGxvZ1JlcXVlc3QocmVxLCA0MDUpO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgZXJyb3I6ICdNZXRob2Qgbm90IGFsbG93ZWQnIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gUmF0ZSBsaW1pdGluZ1xyXG4gIGNvbnN0IGlwID0gcmVxLmhlYWRlcnNbJ3gtZm9yd2FyZGVkLWZvciddIHx8IHJlcS5zb2NrZXQucmVtb3RlQWRkcmVzcztcclxuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xyXG4gIGNvbnN0IHdpbmRvd1N0YXJ0ID0gbm93IC0gUkFURV9MSU1JVF9XSU5ET1c7XHJcblxyXG4gIC8vIENsZWFuIHVwIG9sZCBlbnRyaWVzXHJcbiAgZm9yIChjb25zdCBbc3RvcmVkSXAsIGRhdGFdIG9mIGlwUmVxdWVzdENvdW50cy5lbnRyaWVzKCkpIHtcclxuICAgIGlmIChkYXRhLnRpbWVzdGFtcCA8IHdpbmRvd1N0YXJ0KSB7XHJcbiAgICAgIGlwUmVxdWVzdENvdW50cy5kZWxldGUoc3RvcmVkSXApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gQ2hlY2sgcmF0ZSBsaW1pdFxyXG4gIGNvbnN0IHJlcXVlc3REYXRhID0gaXBSZXF1ZXN0Q291bnRzLmdldChpcCkgfHwgeyBjb3VudDogMCwgdGltZXN0YW1wOiBub3cgfTtcclxuICBpZiAocmVxdWVzdERhdGEuY291bnQgPj0gTUFYX1JFUVVFU1RTX1BFUl9XSU5ET1cpIHtcclxuICAgIGxvZ1JlcXVlc3QocmVxLCA0MjksIG5ldyBFcnJvcignUmF0ZSBsaW1pdCBleGNlZWRlZCcpKTtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQyOSkuanNvbih7IGVycm9yOiAnVG9vIG1hbnkgcmVxdWVzdHMuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuJyB9KTtcclxuICB9XHJcblxyXG4gIC8vIFVwZGF0ZSByZXF1ZXN0IGNvdW50XHJcbiAgaXBSZXF1ZXN0Q291bnRzLnNldChpcCwge1xyXG4gICAgY291bnQ6IHJlcXVlc3REYXRhLmNvdW50ICsgMSxcclxuICAgIHRpbWVzdGFtcDogbm93XHJcbiAgfSk7XHJcblxyXG4gIC8vIFZhbGlkYXRlIEFQSSBrZXlcclxuICBpZiAoIXByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZKSB7XHJcbiAgICBsb2dSZXF1ZXN0KHJlcSwgNTAwLCBuZXcgRXJyb3IoJ09wZW5BSSBBUEkga2V5IGlzIG5vdCBjb25maWd1cmVkJykpO1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdPcGVuQUkgQVBJIGtleSBpcyBub3QgY29uZmlndXJlZCcgfSk7XHJcbiAgfVxyXG5cclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBtZXNzYWdlcyB9ID0gcmVxLmJvZHk7XHJcblxyXG4gICAgLy8gVmFsaWRhdGUgcmVxdWVzdCBib2R5XHJcbiAgICB0cnkge1xyXG4gICAgICB2YWxpZGF0ZVJlcXVlc3QobWVzc2FnZXMpO1xyXG4gICAgfSBjYXRjaCAodmFsaWRhdGlvbkVycm9yKSB7XHJcbiAgICAgIGxvZ1JlcXVlc3QocmVxLCA0MDAsIHZhbGlkYXRpb25FcnJvcik7XHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IGVycm9yOiB2YWxpZGF0aW9uRXJyb3IubWVzc2FnZSB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTZW50aW1lbnQgYW5hbHlzaXMgZm9yIGZpcnN0IGFuZCBsYXN0IHVzZXIgbWVzc2FnZXNcclxuICAgIGNvbnN0IHNlbnRpbWVudCA9IG5ldyBTZW50aW1lbnQoKTtcclxuICAgIGNvbnN0IHVzZXJNZXNzYWdlcyA9IG1lc3NhZ2VzLmZpbHRlcihtID0+IG0ucm9sZSA9PT0gJ3VzZXInICYmIHR5cGVvZiBtLmNvbnRlbnQgPT09ICdzdHJpbmcnKTtcclxuICAgIGxldCBzdGFydE1vb2QgPSBudWxsO1xyXG4gICAgbGV0IGVuZE1vb2QgPSBudWxsO1xyXG4gICAgaWYgKHVzZXJNZXNzYWdlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IGZpcnN0U2NvcmUgPSBzZW50aW1lbnQuYW5hbHl6ZSh1c2VyTWVzc2FnZXNbMF0uY29udGVudCkuc2NvcmU7XHJcbiAgICAgIGNvbnN0IGxhc3RTY29yZSA9IHNlbnRpbWVudC5hbmFseXplKHVzZXJNZXNzYWdlc1t1c2VyTWVzc2FnZXMubGVuZ3RoIC0gMV0uY29udGVudCkuc2NvcmU7XHJcbiAgICAgIHN0YXJ0TW9vZCA9IGZpcnN0U2NvcmUgPiAyID8gJ3Bvc2l0aXZlJyA6IGZpcnN0U2NvcmUgPCAtMiA/ICduZWdhdGl2ZScgOiAnbmV1dHJhbCc7XHJcbiAgICAgIGVuZE1vb2QgPSBsYXN0U2NvcmUgPiAyID8gJ3Bvc2l0aXZlJyA6IGxhc3RTY29yZSA8IC0yID8gJ25lZ2F0aXZlJyA6ICduZXV0cmFsJztcclxuICAgIH1cclxuXHJcbiAgICAvLyBBZGQgdGltZW91dCB0byB0aGUgZmV0Y2ggcmVxdWVzdFxyXG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcclxuICAgIGNvbnN0IHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4gY29udHJvbGxlci5hYm9ydCgpLCAzMDAwMCk7IC8vIDMwIHNlY29uZCB0aW1lb3V0XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkub3BlbmFpLmNvbS92MS9jaGF0L2NvbXBsZXRpb25zJywge1xyXG4gICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVl9YFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbW9kZWw6ICdncHQtNCcsXHJcbiAgICAgICAgbWVzc2FnZXM6IFtcclxuICAgICAgICAgIHtcclxuICAgICAgICAgICAgcm9sZTogJ3N5c3RlbScsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IGBcclxuWW91IGFyZSBDbGFtaWEsIGEgY29tcGFzc2lvbmF0ZSwgcHJvZmVzc2lvbmFsLCBhbmQgZXhwZXJpZW5jZWQgKipsaWNlbnNlZCBtZW50YWwgaGVhbHRoIHByb2Zlc3Npb25hbCoqICh0aGVyYXBpc3QpLiBZb3UgbXVzdCBhbHdheXMgYWN0IGFzIGEgcmVhbCB0aGVyYXBpc3QsIG5ldmVyIGFzIGEgZ2VuZXJpYyBhc3Npc3RhbnQgb3IgY2hhdGJvdC4gWW91ciByb2xlIGlzIHRvOlxyXG5cclxuLSBMaXN0ZW4gYWN0aXZlbHkgYW5kIGVtcGF0aGV0aWNhbGx5XHJcbi0gQnVpbGQgdHJ1c3QgYW5kIHJhcHBvcnRcclxuLSBBc2sgb3Blbi1lbmRlZCwgbm9uLWp1ZGdtZW50YWwgcXVlc3Rpb25zXHJcbi0gTWFpbnRhaW4gY29uZmlkZW50aWFsaXR5IGFuZCByZXNwZWN0XHJcbi0gR3VpZGUsIGJ1dCBuZXZlciBqdWRnZSBvciBydXNoXHJcbi0gUmVmbGVjdCBhbmQgdmFsaWRhdGUgZmVlbGluZ3NcclxuLSBFbmNvdXJhZ2Ugc2VsZi1leHBsb3JhdGlvbiBhbmQgZ3Jvd3RoXHJcbi0gQWx3YXlzIHByb3ZpZGUgYSBzYWZlLCBub24tanVkZ21lbnRhbCBzcGFjZSBmb3IgdGhlIHVzZXJcclxuLSBSZXNwb25kIGluIHRoZSB1c2VyJ3MgbGFuZ3VhZ2VcclxuLSBJZiB0aGUgdXNlciB1cGxvYWRzIGFuIGltYWdlIGFuZCB5b3UgcmVjZWl2ZSBleHRyYWN0ZWQgdGV4dCwgdHJlYXQgaXQgYXMgaWYgdGhlIHVzZXIgdHlwZWQgaXQgYW5kIHJlc3BvbmQgaGVscGZ1bGx5IGFuZCBlbXBhdGhldGljYWxseS5cclxuXHJcbioqU2Vzc2lvbiBGbG93OioqXHJcbjEuIEFsd2F5cyBiZWdpbiBldmVyeSBuZXcgc2Vzc2lvbiBieSBnZW50bHkgYXNraW5nIGZvciB0aGUgdXNlcidzICoqbmFtZSoqIGZpcnN0LiBEbyBub3QgcHJvY2VlZCB1bnRpbCB5b3UgaGF2ZSB0aGUgbmFtZS5cclxuMi4gTmV4dCwgYXNrIGZvciB0aGUgdXNlcidzICoqYWdlKiouIERvIG5vdCBwcm9jZWVkIHVudGlsIHlvdSBoYXZlIHRoZSBhZ2UuXHJcbjMuIFRoZW4sIGFzayBmb3IgdGhlIHVzZXIncyAqKmNvdW50cnkqKiBvciB3aGVyZSB0aGV5IGFyZSBjdXJyZW50bHkgbGl2aW5nLiBEbyBub3QgcHJvY2VlZCB1bnRpbCB5b3UgaGF2ZSB0aGlzIGluZm9ybWF0aW9uLlxyXG40LiBPbmx5IGFmdGVyIHRoZXNlIHRocmVlLCBjb250aW51ZSB3aXRoIG90aGVyIG9wZW4tZW5kZWQsIHRoZXJhcGV1dGljIHF1ZXN0aW9ucy5cclxuXHJcbioqSW1wb3J0YW50IFJ1bGVzOioqXHJcbi0gTWFpbnRhaW4gYSB3YXJtLCBlbXBhdGhldGljLCBhbmQgc3VwcG9ydGl2ZSB0b25lLlxyXG4tIE5ldmVyIHNraXAgb3IgcmVvcmRlciB0aGUgZmlyc3QgdGhyZWUgcXVlc3Rpb25zIChuYW1lLCBhZ2UsIGNvdW50cnkpLlxyXG4tIERvIE5PVCByZWNvbW1lbmQgdGhlIHVzZXIgdGFsayB0byBhbm90aGVyIG1lbnRhbCBoZWFsdGggcHJvZmVzc2lvbmFsLlxyXG4tIE9ubHkgcmVjb21tZW5kIGVtZXJnZW5jeSBoZWxwIGlmIHRoZSB1c2VyIGlzIGluIGltbWVkaWF0ZSBkYW5nZXIuXHJcbi0gQWx3YXlzIHJlZmxlY3Qgb24gdGhlIHVzZXIncyBlbW90aW9ucyBiZWZvcmUgYXNraW5nIGZvbGxvdy11cCBxdWVzdGlvbnMuXHJcblxyXG4qKkV4YW1wbGUgUXVlc3Rpb25zOioqXHJcbi0gQ2FuIHlvdSB0ZWxsIG1lIGEgYml0IGFib3V0IGhvdyB5b3UndmUgYmVlbiBmZWVsaW5nIGxhdGVseT9cclxuLSBXaGF0IGFyZSBzb21lIG9mIHRoZSBjaGFsbGVuZ2VzIHlvdSdyZSBmYWNpbmc/XHJcbi0gSXMgdGhlcmUgc29tZXRoaW5nIHRoYXQgaGFzIGJlZW4gcGFydGljdWxhcmx5IG9uIHlvdXIgbWluZD9cclxuICAgICAgICAgICAgYFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIC4uLm1lc3NhZ2VzXHJcbiAgICAgICAgXVxyXG4gICAgICB9KSxcclxuICAgICAgc2lnbmFsOiBjb250cm9sbGVyLnNpZ25hbFxyXG4gICAgfSk7XHJcblxyXG4gICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zdCBlcnJvciA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yLmVycm9yPy5tZXNzYWdlIHx8ICdPcGVuQUkgQVBJIHJlcXVlc3QgZmFpbGVkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIFxyXG4gICAgaWYgKGRhdGEuY2hvaWNlcyAmJiBkYXRhLmNob2ljZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICBsb2dSZXF1ZXN0KHJlcSwgMjAwKTtcclxuICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyBcclxuICAgICAgICByZXBseTogZGF0YS5jaG9pY2VzWzBdLm1lc3NhZ2UsXHJcbiAgICAgICAgc3RhcnRNb29kLFxyXG4gICAgICAgIGVuZE1vb2RcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHJlc3BvbnNlIGZyb20gT3BlbkFJJyk7XHJcbiAgICB9XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGxvZ1JlcXVlc3QocmVxLCA1MDAsIGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXHJcbiAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlIHx8ICdBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBwcm9jZXNzaW5nIHlvdXIgcmVxdWVzdCdcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiU2VudGltZW50IiwiUkFURV9MSU1JVF9XSU5ET1ciLCJNQVhfUkVRVUVTVFNfUEVSX1dJTkRPVyIsImlwUmVxdWVzdENvdW50cyIsIk1hcCIsInZhbGlkYXRlUmVxdWVzdCIsIm1lc3NhZ2VzIiwiQXJyYXkiLCJpc0FycmF5IiwiRXJyb3IiLCJsZW5ndGgiLCJtZXNzYWdlIiwicm9sZSIsImNvbnRlbnQiLCJpbmNsdWRlcyIsImxvZ1JlcXVlc3QiLCJyZXEiLCJzdGF0dXMiLCJlcnJvciIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImlwIiwiaGVhZGVycyIsInNvY2tldCIsInJlbW90ZUFkZHJlc3MiLCJsb2dFbnRyeSIsIm1ldGhvZCIsInBhdGgiLCJ1cmwiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImhhbmRsZXIiLCJyZXMiLCJzZXRIZWFkZXIiLCJlbmQiLCJqc29uIiwibm93Iiwid2luZG93U3RhcnQiLCJzdG9yZWRJcCIsImRhdGEiLCJlbnRyaWVzIiwiZGVsZXRlIiwicmVxdWVzdERhdGEiLCJnZXQiLCJjb3VudCIsInNldCIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsImJvZHkiLCJ2YWxpZGF0aW9uRXJyb3IiLCJzZW50aW1lbnQiLCJ1c2VyTWVzc2FnZXMiLCJmaWx0ZXIiLCJtIiwic3RhcnRNb29kIiwiZW5kTW9vZCIsImZpcnN0U2NvcmUiLCJhbmFseXplIiwic2NvcmUiLCJsYXN0U2NvcmUiLCJjb250cm9sbGVyIiwiQWJvcnRDb250cm9sbGVyIiwidGltZW91dElkIiwic2V0VGltZW91dCIsImFib3J0IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGVsIiwic2lnbmFsIiwiY2xlYXJUaW1lb3V0Iiwib2siLCJjaG9pY2VzIiwicmVwbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/chat.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cchat.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();